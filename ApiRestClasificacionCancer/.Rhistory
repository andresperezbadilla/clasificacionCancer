setwd('C:\\Users\\Andres Steven\\Documents\\Ionic\\Proyects\\clasificacionCancer\\ApiRestClasificacionCancer')
#librerï¿½as utiliadas (puede que necesiten instalar una o mï¿½s de estas librerï¿½as, en ese caso, utilicen install.library(caTools)
library(rpart)
library(caTools)
# install.packages("RPostgreSQL")
require("RPostgreSQL")
# create a connection
# save the password that we can "hide" it as best as we can by collapsing it
pw <- {
"12345"
}
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database
# note that "con" will be used later in each connection to the database
con <- dbConnect(drv, dbname = "cancer_classification",
host = "localhost", port = 5432,
user = "postgres", password = pw)
rm(pw) # removes the password
# check for the cartable
#dbExistsTable(con, "history")
# TRUE
# query the data from postgreSQL
bcw <- dbGetQuery(con, "SELECT * from history")
bcw=bcw[,3:12]
colnames(bcw)<-c('Thickness', 'Uniformity.Size',
'Uniformity.Shape', 'Adhesion', 'Epithelial.Size',
'Nuclei', 'Chromatin', 'Nucleoli', 'Mitoses','Class')
setwd('C:\\Users\\Andres Steven\\Documents\\Ionic\\Proyects\\clasificacionCancer\\ApiRestClasificacionCancer')
#bcw <- read.csv('bcw.csv', header = F,
#                col.names = c('Sample.number', 'Thickness', 'Uniformity.Size',
#                              'Uniformity.Shape', 'Adhesion', 'Epithelial.Size',
#                              'Nuclei', 'Chromatin', 'Nucleoli', 'Mitoses', 'Class'),
#                na.strings = '?')
bcw$Class <- factor(bcw$Class)
#str(bcw)
#table(bcw$Class)
set.seed(4161)
splt <- sample.split(bcw$Class, SplitRatio = 0.7)
bcw.entrenamiento <- bcw[splt,]
bcw.prueba <- bcw[!splt,]
modelo.arbol <- rpart(Class ~ .,
data =
bcw.entrenamiento,
method =  'class')
saveRDS(modelo.arbol, "modelo.rds")
predicciones <- predict(modelo.arbol, newdata = bcw.prueba, type = 'class')
table<-table(bcw.prueba$Class, predicciones)
str(((table[1][1] +table[4][1])/nrow(bcw.prueba)*100))
modelo.arbol <- readRDS(path.expand("C:\\Users\\Andres Steven\\Documents\\Ionic\Proyects\\clasificacionCancer\\ApiRestClasificacionCancer\\modelo.rds"))
data=data.frame(a,b,c,d,e,f,g,h,i)
args <- commandArgs(TRUE)
a <- as.double(args[1])
b <- as.double(args[2])
c <- as.double(args[3])
d <- as.double(args[4])
e <- as.double(args[5])
f <- as.double(args[6])
g <- as.double(args[7])
h <- as.double(args[8])
i <- as.double(args[9])
modelo.arbol <- readRDS(path.expand("C:\\Users\Andres Steven\\Documents\\Ionic\\Proyects\\clasificacionCancer\\ApiRestClasificacionCancer\\modelo.rds"))
#data=data.frame(8,10,10,8,7,10,9,7,1)
data=data.frame(a,b,c,d,e,f,g,h,i)
colnames(data)<-c('Thickness', 'Uniformity.Size',
'Uniformity.Shape', 'Adhesion', 'Epithelial.Size',
'Nuclei', 'Chromatin', 'Nucleoli', 'Mitoses')
final_predictions <- predict(modelo.arbol, newdata = data ,type = 'class')
#
#predicciones <- predict(modelo.arbol, newdata = bcw.prueba, type = 'class')
#table<-table(bcw.prueba$Class, predicciones)
#str(((table[1][1] +table[4][1])/nrow(bcw.prueba)*100))
table<-table(final_predictions)
c(table[[1]],table[[2]])
